/*
  Copyright (C) 2025 Joshua Wade

  This file is part of Anthem.

  Anthem is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Anthem is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Anthem. If not, see <https://www.gnu.org/licenses/>.
*/

import 'dart:io';

import 'package:build/build.dart';

/// Generates the path to the debug build of the engine, for local development.
///
/// This is done with a code generator so that it can be cross-platform. dart:io
/// has a property at `Platform.script` that gives the location to main.dart and
/// we used to use it; however, macOS sandboxes the development build in such a
/// way that the path is completely unrelated to the project structure.
///
/// Since code generation must operate on the source code, we can use it to
/// generate a Dart file that has the path in a variable, which can then be used
/// to locate the engine executable during development.
class DebugEnginePathGeneratorBuilder extends Builder {
  @override
  final buildExtensions = const {
    '.dart': ['.debug_engine_path.g.dart'],
  };

  @override
  Future<void> build(BuildStep buildStep) async {
    final inputId = buildStep.inputId;
    final outputId = inputId.changeExtension('.debug_engine_path.g.dart');

    // Get the path where the debug engine will be located after build
    var uri = Uri.file(buildStep.inputId.path).resolve('../');

    // Traverse up the directory structure until we find a pubspec.yaml file
    while (uri.pathSegments.length > 1 &&
        !(await File(
          uri.resolve('./pubspec.yaml').toFilePath(windows: Platform.isWindows),
        ).exists())) {
      uri = uri.resolve('../');
    }

    // "uri" is now the root of the project
    final projectRoot = uri;

    // Create the path to the debug engine executable
    var enginePath = projectRoot.resolve(
      './engine/build/AnthemEngine_artefacts/${Platform.isMacOS ? '' : 'Debug/'}AnthemEngine${Platform.isWindows ? '.exe' : ''}',
    );

    // Write the path to the output file
    final outputContent =
        '''// This file is generated by the Anthem code generator.
part of 'engine_connector.dart';

final String debugEnginePath = '${File.fromUri(enginePath).absolute.uri.toFilePath(windows: Platform.isWindows).replaceAll('\\', '\\\\')}';
''';

    // Write the content to the output file
    await buildStep.writeAsString(outputId, outputContent);
  }
}
