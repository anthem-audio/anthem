/*
  Copyright (C) 2024 Joshua Wade

  This file is part of Anthem.

  Anthem is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Anthem is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Anthem. If not, see <https://www.gnu.org/licenses/>.
*/

import 'package:build/build.dart';
import 'package:glob/glob.dart';

class CMakeListsGenerator implements Builder {
  @override
  Future<void> build(BuildStep buildStep) async {
    var codeToWrite = '''/*
  This file is generated by the Anthem code generator.
*/
''';

    final files =
        await buildStep.findAssets(Glob('engine/generated/lib/**.h')).toList();

    for (final file in files) {
      codeToWrite +=
          'add_library(${file.pathSegments.last.replaceAll('.h', '')} ${file.pathSegments.last})\n';
    }

    final newPath =
        'engine/generated/${buildStep.inputId.path.replaceAll('engine.generated.', '').replaceAll('.placeholder', '')}';

    await buildStep.writeAsString(
        AssetId(buildStep.inputId.package, newPath), codeToWrite);
  }

  @override
  Map<String, List<String>> get buildExtensions => {
        '{{dir}}/engine.generated.{{file}}.placeholder': [
          'engine/generated/{{dir}}/{{file}}'
        ],
      };
}
