name: Build Anthem

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
          - os: windows-11-arm
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-24.04-arm
            arch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # --------------------------------------------------------------
      # Install dependencies (Linux only)
      # --------------------------------------------------------------
      - name: Install apt dependencies
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y ninja-build llvm clang libx11-dev libxrandr-dev \
                             libxinerama-dev libxcursor-dev libfreetype-dev \
                             mesa-common-dev libasound2-dev freeglut3-dev \
                             libxcomposite-dev libgtk-3-dev libasound2-dev \
                             libwebkit2gtk-4.1-dev libcurl4-openssl-dev

      # --------------------------------------------------------------
      # Clone + set up Flutter (Windows)
      # --------------------------------------------------------------
      - name: Clone Flutter (Windows)
        if: contains(matrix.os, 'windows')
        run: |
          git clone --branch stable https://github.com/flutter/flutter.git $env:RUNNER_TEMP\flutter
          Add-Content $env:GITHUB_PATH "$env:RUNNER_TEMP\flutter\bin"

      # --------------------------------------------------------------
      # Clone + set up Flutter (Linux)
      # --------------------------------------------------------------
      - name: Clone Flutter (Linux)
        if: contains(matrix.os, 'ubuntu')
        run: |
          git clone --branch stable https://github.com/flutter/flutter.git "$RUNNER_TEMP/flutter"
          echo "$RUNNER_TEMP/flutter/bin" >> $GITHUB_PATH

      # --------------------------------------------------------------
      # Flutter doctor
      # --------------------------------------------------------------
      - name: Install Flutter
        run: flutter doctor

      # --------------------------------------------------------------
      # Get dependencies
      # --------------------------------------------------------------
      - name: Get dependencies
        run: flutter pub get

      # --------------------------------------------------------------
      # Run code generation
      # --------------------------------------------------------------
      - name: Run code generation
        run: dart run anthem:cli codegen generate --explicit-format-for-ci

      # --------------------------------------------------------------
      # Check formatting
      # --------------------------------------------------------------
      - name: Format code
        run: dart format . --set-exit-if-changed -o none

      # --------------------------------------------------------------
      # Lint (Windows)
      # --------------------------------------------------------------
      - name: Lint code
        if: contains(matrix.os, 'windows')
        run: |
          mkdir assets\engine
          dart analyze --fatal-infos
      
      # --------------------------------------------------------------
      # Lint (Linux)
      # --------------------------------------------------------------
      - name: Lint code
        if: contains(matrix.os, 'ubuntu')
        run: |
          mkdir -p assets/engine
          dart analyze --fatal-infos

      # --------------------------------------------------------------
      # Build engine
      # --------------------------------------------------------------
      - name: Build engine
        run: dart run anthem:cli engine build --release

      # --------------------------------------------------------------
      # Engine unit tests
      # --------------------------------------------------------------
      - name: Run engine unit tests
        run: dart run anthem:cli engine unit-test

      # --------------------------------------------------------------
      # Flutter unit + integration tests
      # --------------------------------------------------------------
      - name: Run Flutter tests
        run: flutter test .

        # --------------------------------------------------------------
        # Build Flutter (Windows)
        # --------------------------------------------------------------
      - name: Build Flutter (Windows)
        if: contains(matrix.os, 'windows')
        run: flutter build windows --verbose --release
        
        # --------------------------------------------------------------
        # Build Flutter (Linux)
        # --------------------------------------------------------------
      - name: Build Flutter (Linux)
        if: contains(matrix.os, 'ubuntu')
        run: flutter build linux --verbose --release

      # --------------------------------------------------------------
      # Upload artifacts (Windows)
      # --------------------------------------------------------------
      - name: Upload artifact (Windows)
        if: contains(matrix.os, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: anthem-windows-${{ matrix.arch }}
          path: ${{ github.workspace }}/${{ matrix.arch == 'x64' && 'build/windows/x64/runner/Release' || 'build/windows/arm64/runner/Release' }}

      # --------------------------------------------------------------
      # Upload artifacts (Linux)
      # --------------------------------------------------------------
      - name: Upload artifact (Linux)
        if: contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v4
        with:
          name: anthem-linux-${{ matrix.arch }}
          path: ${{ github.workspace }}/${{ matrix.arch == 'x64' && 'build/linux/x64/release/bundle' || 'build/linux/arm64/release/bundle' }}
