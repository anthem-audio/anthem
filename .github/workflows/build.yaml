name: Build Anthem
on: [push, pull_request]
jobs:
  build-windows:
    runs-on: [windows-latest]
    steps:
      - name: Check out Anthem
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: master
          flutter-version: 3.29.0

      # Get dependencies for Flutter
      - name: Get dependencies
        run: flutter pub get

      # Run code generation
      - name: Run code generation
        run: dart run anthem:cli codegen generate

      # Check for formatting in Flutter project
      - name: Format Flutter code
        run: dart format . --set-exit-if-changed -o none

      # Lint Flutter project
      - name: Lint Flutter code
        run: |
          mkdir assets\engine
          dart analyze --fatal-infos

      # Build engine
      - name: Build engine
        run: dart run anthem:cli engine build --release

      - name: Run engine unit tests
        run: dart run anthem:cli engine unit-test

      - name: Run Flutter unit tests and whole-app integration tests
        run: flutter test .

      # Build Flutter project
      - name: Build Flutter project
        run: flutter build windows --verbose --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: anthem-windows-x64
          path: ${{ github.workspace }}/build/windows/x64/runner/Release

  build-linux:
    strategy:
      matrix:
        arch: [x86, arm]
    runs-on: ${{ matrix.arch == 'x86' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    steps:
      - name: Check out Anthem
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: master
          flutter-version: 3.29.0

      # Get dependencies for Flutter
      - name: Get dependencies
        run: flutter pub get

      # Run code generation
      - name: Run code generation
        run: dart run anthem:cli codegen generate

      # Check for formatting in Flutter project
      - name: Format Flutter code
        run: dart format . --set-exit-if-changed -o none

      # Lint Flutter project
      - name: Lint Flutter code
        run: |
          mkdir -p assets/engine
          dart analyze --fatal-infos

      # Build engine
      - name: Build engine
        run: dart run anthem:cli engine build --release
      
      - name: Run engine unit tests
        run: dart run anthem:cli engine unit-test

      - name: Run Flutter unit tests and whole-app integration tests
        run: flutter test .

      # Build Flutter project
      - name: Build Flutter project
        run: flutter build linux --verbose --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: anthem-linux-${{ matrix.arch == 'x86' && 'x64' || 'arm64' }}
          path: ${{ github.workspace }}/${{ matrix.arch == 'x86' && 'build/linux/x64/release/bundle' || 'build/linux/arm64/release/bundle' }}
