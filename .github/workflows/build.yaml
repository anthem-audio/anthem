name: Build Anthem
on: [push]
jobs:
  build-windows:
    runs-on: [windows-latest]
    if: false
    steps:
      - name: Check out Anthem
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install flatbuffers compiler
        run: |
          Invoke-WebRequest -Uri "https://github.com/google/flatbuffers/releases/download/v23.3.3/Windows.flatc.binary.zip" -OutFile "flatc.zip"
          7z e flatc.zip -o"flatc"
          echo "flatc;" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          boost_version: 1.81.0
          platform_version: 2022
          toolset: msvc

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.12'
          channel: 'stable'
          cache: true

      # Set up environment
      - name: Set up environment
        run: .\scripts\setup.ps1

      # Run bindgen
      - name: Run bindgen
        run: .\scripts\bindgen.ps1

      # Build engine
      - name: Build engine
        run: .\scripts\build.ps1
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      # Get dependencies for Flutter
      - name: Get dependencies
        run: flutter pub get

      # Run code generation
      - name: Run code generation
        run: flutter pub run build_runner build

      # Check for formatting in Flutter project
      - name: Format Flutter code
        run: dart format . --set-exit-if-changed -o none

      # Lint Flutter project
      - name: Lint Flutter code
        run: dart analyze
      
      - name: Test Flutter code
        run: flutter test .

      # Build Flutter project
      - name: Build Flutter project
        run: |
          if ($Env:RUNNER_OS -eq "Windows") {
            flutter build windows --verbose
          }
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: anthem
          path: ${{ github.workspace }}/build/windows/runner/Release

  build-linux:
    runs-on: [ubuntu-latest]
    steps:
      - name: Check out Anthem
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install flatbuffers compiler
        run: |
          wget "https://github.com/google/flatbuffers/releases/download/v23.3.3/Linux.flatc.binary.clang++-12.zip" -O flatc.zip
          7z e flatc.zip -oflatc
          sudo cp flatc/flatc /usr/local/bin/
          flatc -h
          
